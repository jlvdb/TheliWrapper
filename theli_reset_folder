#!/usr/bin/env python3
import os
import shutil
import argparse
from fnmatch import fnmatch


class Folder(object):
    """This is a stripped version of <theli_base.Folder> to avoid the whole
    initialization procedure when importing from theli_base"""

    def __init__(self, path):
        super(Folder, self).__init__()
        self.abs = os.path.abspath(path)

    def contains(self, entry):
        return any(fnmatch(f, entry) for f in os.listdir(self.abs))

    def delete(self, target):
        """delete entry 'target' from folder"""
        for entry in os.listdir(self.abs):
            if fnmatch(target, entry):
                delete = os.path.join(self.abs, os.path.join(self.abs, entry))
                if os.path.isdir(delete):
                    shutil.rmtree(delete)
                elif os.path.isfile(delete):
                    os.remove(delete)

    def restore(self):
        """restore the original (raw) FITS files in the folder and delete all
        other content"""
        content = os.listdir(self.abs)
        if "ORIGINALS" in content:
            for c in content:
                if c != "ORIGINALS":
                    self.delete(c)
            self.lift_content("ORIGINALS")

    def lift_content(self, subfolder):
        """move the content of a subfolder to the parent and delete it"""
        if self.contains(subfolder):
            subfolder = os.path.join(self.abs, subfolder)
            for entry in os.listdir(subfolder):
                shutil.move(
                    os.path.join(subfolder, entry),
                    os.path.join(self.abs, entry))
            shutil.rmtree(subfolder)


parser = argparse.ArgumentParser(
    description="Tool to restore a THELI data folder to its initial state. "
                "This will only happen, if a folder named ORIGINALS is "
                "present in that folder. CAUTION: All other files and folders "
                "will be deleteted without warning.")
parser.add_argument(
    dest="FOLDERS", nargs='*', help="folder(s) to be restored")
args = parser.parse_args()


for arg in args.FOLDERS:
    Folder(os.path.abspath(os.path.normpath(arg))).restore()
